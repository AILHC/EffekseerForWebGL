trigger:
- master

pool:
  vmImage: 'windows-2019'


steps:

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      git clone https://github.com/emscripten-core/emsdk.git
      cd emsdk
      ./emsdk install latest
      ./emsdk activate latest
      source ./emsdk_env.sh
      cd ..
      git clone https://github.com/effekseer/Effekseer --depth 1 ../Effekseer
      pip install dukpy jsmin
      mkdir build
      cd build
      emcmake cmake ..
      make

- task: PythonScript@0
  inputs:
    scriptSource: 'inline'
    script: |
      import os
      import dukpy
      import jsmin

      os.chdir("build")

      effekseer_core_js = os.path.join(".", "effekseer.core.js")
      effekseer_src_js = os.path.join("..", "Dev", "Source", "effekseer.src.js")
      effekseer_js = os.path.join("..", "Release", "effekseer.js")
      effekseer_min_js = os.path.join("..", "Release", "effekseer.min.js")
      outfile_js = open(effekseer_js, "w")
      outfile_min_js = open(effekseer_min_js, "w")
      
      with open(effekseer_core_js) as infile:
          data = infile.read()
          outfile_js.write(data)
          outfile_min_js.write(data)
      with open(effekseer_src_js) as infile:
          data = infile.read()
          data_es5 = dukpy.babel_compile(data)["code"]
          outfile_js.write(data_es5)
          outfile_min_js.write(jsmin.jsmin(data_es5))
- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      python -m pip install --upgrade pip
      pip install selenium chromedriver-binary==76.0.3809.68.0
      cd tests
      python test.py

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: 'Release'
    ArtifactName: 'Release'
    publishLocation: 'Container'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: 'tests/screenshots'
    ArtifactName: 'screenshots'
    publishLocation: 'Container'